<Project InitialTargets="FullDepoly" DefaultTargets="FullDepoly" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<!-- Import the Natvie  mode tasks for deploying the reports-->
	<Import Project="$(MSBuildProjectDirectory)\ssrsmsbuildtasks.R2.tasks" />
	
	<!--ReportServer-->
	<PropertyGroup>
		<ServerURL>http://$(COMPUTERNAME)/reportserver</ServerURL>
    <ProjectReportRoot>/SSRSMSBuildTeaskDemoR2</ProjectReportRoot>
		<ProjectReportFolder>$(ProjectReportRoot)/Reports</ProjectReportFolder>
    <ProjectDataSetFolder>$(ProjectReportRoot)/DataSet</ProjectDataSetFolder>
		<ProjectReportDataSources>$(ProjectReportRoot)/Data Sources</ProjectReportDataSources>
	</PropertyGroup>
	
	<!--Databases-->
	<PropertyGroup>
		<!--Update with the name of the SQL Server that you wish the reports run against-->
		<SQLServer>$(COMPUTERNAME)</SQLServer>
		<!--Update with name of the SQL Server that contains the report server database-->
		<ReportSQLServer>$(COMPUTERNAME)</ReportSQLServer>
		<!--The name of database you wish the reports to run against-->
		<Reportingdb>msdb</Reportingdb>
		<!--The Report Server database name-->
		<ReportServerdb>ReportServer</ReportServerdb>
	</PropertyGroup>
	
	<!--Reports-->
  <ItemGroup>
    <ReportsToDeploy Include="$(MSBuildProjectDirectory)\SSRSMSBuildTaskDemoR2\*.rdl" />
    <DataSetToDeploy Include="$(MSBuildProjectDirectory)\SSRSMSBuildTaskDemoR2\ParametersDefaults.rsd">
      <Folder>$(ProjectDataSetFolder)</Folder>
      <DataSource>$(ProjectReportDataSources)/ReportServer</DataSource>
      <ReportDataSetNames>ParametersDefault</ReportDataSetNames>
    </DataSetToDeploy>
  </ItemGroup>
  
	<!--DataSoucre-->
	<ItemGroup>
		<!--The Include is the Name of the DataSet to create-->
		<ReportDataSourceToDeploy Include="ReportServer">
			<ConnectionString>Data Source=$(SQLServer);initial catalog=$(ReportServerdb);Integrated Security=True</ConnectionString>
			<Folder>$(ProjectReportDataSources)</Folder>
			<Provider>SQL</Provider>
			<OverWrite>True</OverWrite>
		</ReportDataSourceToDeploy>
		<ReportDataSourceToDeploy Include="$(COMPUTERNAME)-$(Reportingdb)">
			<ConnectionString>Data Source=$(SQLServer);initial catalog=$(Reportingdb);Integrated Security=True</ConnectionString>
			<!--The reports use the name below to referre to this data source as SQLConnection do not change the report name otherwise this build script will faill-->
			<ReportDataSourceNames>SQLConnection</ReportDataSourceNames>
			<Folder>$(ProjectReportDataSources)</Folder>
			<Provider>SQL</Provider>
			<OverWrite>True</OverWrite>
		</ReportDataSourceToDeploy>
	</ItemGroup>
  
	<ItemGroup>

	<!--The Include is the Report Server Schedules-->
		<ReportServerSchedule Include="MinuteRecurrence">
			<Interval>02:30</Interval>
			<StartDateTime>01/02/2012</StartDateTime>
			<ScheduleRecurrence>Min</ScheduleRecurrence>
		</ReportServerSchedule >
		
		<ReportServerSchedule Include="DailyRecurrence">
			<Interval>2</Interval>
			<StartDateTime>01/02/2012</StartDateTime>
			<ScheduleRecurrence>Daily</ScheduleRecurrence>
		</ReportServerSchedule >
		
		<ReportServerSchedule Include="WeeklyRecurrence">
			<StartDateTime>01/02/2012</StartDateTime>
			<ScheduleRecurrence>Weekly</ScheduleRecurrence>
			<DaysOfWeek>Mon;Tue;Wed;Thu;Fri</DaysOfWeek>
		</ReportServerSchedule >

		<ReportServerSchedule Include="MonthlyRecurrence">
			<Interval>1,10,20</Interval>
			<StartDateTime>01/02/2012</StartDateTime>
			<ScheduleRecurrence>Monthly</ScheduleRecurrence>
			<MonthsOfYear>Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec</MonthsOfYear>
		</ReportServerSchedule >
		
		<ReportServerSchedule Include="MonthlyDOWRecurrence">
			<StartDateTime>01/02/2012</StartDateTime>
			<ScheduleRecurrence>MonthlyDOW</ScheduleRecurrence>
			<MonthsOfYear>Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec</MonthsOfYear>
			<DaysOfWeek>Mon;Tue;Wed;Thu;Fri</DaysOfWeek>
		</ReportServerSchedule >
		
	</ItemGroup>
  
  <PropertyGroup>
    <FullDeployDependsOn>
      GetServerURL;
      CreateSchedules;
      DeleteFolders;
      CreateReportingFolders;
      CreateConnectionSources;
      CreateShareDataSet;
      DeployReports;
      SetReportDataSet;
      SetReportsDataSource;
      UploadResource
    </FullDeployDependsOn>
  </PropertyGroup>

  <Target Name="FullDepoly" DependsOnTargets="$(FullDeployDependsOn)" />

  <!--Get Full Server URL-->
  <Target Name="GetServerURL">
    <GetFullURL ServerURL="$(ServerURL)" IsIntergatedMode="False">
      <Output TaskParameter="ReportServerUrl" PropertyName="ReportingServerURL" />
    </GetFullURL>
  </Target>
  
	<Target Name="CreateSchedules">
		<CreateReportSchedule ReportServerURL="$(ReportingServerURL)" ReportSchedules="@(ReportServerSchedule)" />
	</Target>
  
	<Target Name="DeleteFolders">
		<!--Checking and deleteing Project Report Folder-->
		<ReportFolderExists ReportServerURL="$(ReportingServerURL)" Folder="/" FolderName="SSRSMSBuildTeaskDemo">
			<Output TaskParameter="Exists" PropertyName="ReportItemExists" />
		</ReportFolderExists>
		<DeleteReportFolder ReportServerURL="$(ReportingServerURL)" Folder="/SSRSMSBuildTeaskDemo" Condition="$(ReportItemExists) == True"/>
	</Target>
	
	<Target Name="CreateReportingFolders">
		<!-- Create the Report Folders -->
		<CreateReportFolder ReportServerURL="$(ReportingServerURL)" NewFolderPath="$(ProjectReportFolder)" />
		<CreateReportFolder ReportServerURL="$(ReportingServerURL)" NewFolderPath="$(ProjectReportDataSources)" />
    <CreateReportFolder ReportServerURL="$(ReportingServerURL)" NewFolderPath="$(ProjectDataSetFolder)" />
	</Target>
	
	<Target Name="CreateConnectionSources">
		<!--This will create the reporting data source -->
		<CreateReportingDataSource ReportServerURL="$(ReportingServerURL)" DataSources="@(ReportDataSourceToDeploy)" />
	</Target>

  <Target Name="CreateShareDataSet">
    <!--Loop through the all the reports within the folder (and sub-folder) and assign the location of the named reports data source if it's in the list (which will need to be otherwise the build will fail)-->
    <AddShareDataSets ReportServerURL="$(ReportingServerURL)" ShareDataSets="@(DataSetToDeploy)" />
  </Target>

  <Target Name="DeployReports">
		<!--This will upload the reports to folder name-->
		<AddReports ReportServerURL="$(ReportingServerURL)" Folder="$(ProjectReportFolder)" ReportFiles="@(ReportsToDeploy)" />
	</Target>

  <Target Name="SetReportDataSet">
    <SetReportDataSet ReportServerURL="$(ReportingServerURL)" Recursive="true" ReportItem="$(ProjectReportFolder)" ShareDataSets="@(DataSetToDeploy)" UseMatchCase="False" />
  </Target>
  
	<Target Name="SetReportsDataSource">
    <!--Loop through the all the reports within the folder (and sub-folder) and assign the location of the named reports data source if it's in the list (which will need to be otherwise the build will fail)-->
		<SetReportDataSource ReportServerURL="$(ReportingServerURL)" Recursive="true" ReportItem="$(ProjectReportFolder)" DataSources="@(ReportDataSourceToDeploy)" UseMatchCase="False" />
	</Target>
  
</Project>